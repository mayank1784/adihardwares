<style>

 .mycarousel{
  }
  .carousel-item {
    height: 75vh;
    min-height: 300px;
    background: no-repeat scroll center scroll;
    -webkit-background-size: cover;
    background-size: cover;
    overflow: hidden;
  }
  .carousel-item::before {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: #000;
    opacity: 0.3;
  }
  /* .carousel-caption {
    bottom: 180px;
    padding-left: 80px;
    padding-right: 80px;
  }
  .carousel-caption h5 {
    font-size: 100px;
    font-weight: 700;
  }
  .carousel-caption p {
    font-size: 18px;
    top: 2rem;
  } */
  .slider-btn .btn {
    background-color: #e74c3c;
    columns: white;
    border-radius: 0;
    padding: 1.5rem 2rem;
    font-size: 1rem;
  }
  .slider-btn .btn2 {
    color: #111010;
    background-color: white;
  }
  .carousel-item img {
    height: 100%; /* Ensure the image takes the full height of the carousel item */
    object-fit: cover; /* Scale the image to cover the entire container */
    width: 100%;
  }
  @media (max-width: 768px) {
    .carousel-item {
      height: 300px; /* Adjust this value for smaller devices */
    }

    .carousel-caption {
      bottom: 0; /* Place the caption at the bottom */
      left: 0; /* Align caption to the left */
      right: 0; /* Align caption to the right */
      padding: 10px; /* Adjust this value for smaller devices */
      background: rgba(0, 0, 0, 0.7); /* Add background for better visibility */
    }

    .carousel-caption h5 {
      font-size: 24px; /* Adjust this value for smaller devices */
      margin-bottom: 5px; /* Add some spacing between heading and paragraph */
    }

    .carousel-caption p {
      font-size: 14px; /* Adjust this value for smaller devices */
      margin-bottom: 10px; /* Add some spacing between paragraphs and buttons */
    }

    .slider-btn {
      text-align: center; /* Center the buttons */
      margin-top: 10px; /* Add some spacing between text and buttons */
    }

    .slider-btn .btn {
      display: inline-block; /* Make buttons display in a row */
      margin: 5px; /* Add some spacing between buttons */
      padding: 8px 15px; /* Adjust this value for smaller devices */
      font-size: 14px; /* Adjust this value for smaller devices */
    }
  }
  .carousel-item .text-bg {
  position: absolute;
  top: 50%;
  left: 50px; /* Adjust the left value to control the starting position of the text */
  transform: translateY(-50%);
  padding: 20px;
  background-color: rgba(0, 0, 0, 0.7); /* Semi-opaque background color */
  color: #ffffff;
  width: 300px; /* Adjust the width of the text box as per your requirement */
  opacity: 0;
  transition: opacity 2s, left 2s;
}

.carousel-item.active .text-bg {
  left: 50px; /* Adjust this value to control the position from which the text comes from */
  opacity: 1;
}
</style>
<div id="carouselExampleCaptions" class="carousel slide mycarousel" data-bs-ride="carousel">
  <div class="carousel-indicators">
    <button
      type="button"
      data-bs-target="#carouselExampleCaptions"
      data-bs-slide-to="0"
      class="active"
      aria-current="true"
      aria-label="Slide 1"
    ></button>
    <button
      type="button"
      data-bs-target="#carouselExampleCaptions"
      data-bs-slide-to="1"
      aria-label="Slide 2"
    ></button>
    <button
      type="button"
      data-bs-target="#carouselExampleCaptions"
      data-bs-slide-to="2"
      aria-label="Slide 3"
    ></button>
  </div>
  <div class="carousel-inner">
    <div class="carousel-item active">
      <img src="images/kitchen.jpeg" class="d-block w-100" alt="..." />
      <!-- <div class="carousel-caption left-caption d-md-block">
        <h5>First slide label</h5>
        <p>Some representative placeholder content for the first slide.</p>
        <div class="slider-btn">
          <button class="btn btn-1">Our Services</button>
          <button class="btn btn-2">Get Services</button>
        </div>
      </div> -->
      <!-- <div class="carousel-caption d-none d-md-block"> -->
        <div class="text-bg active">
         
          <h5>Telescopic Channel Series</h5>
          <p><b>Glidox Telescopic Channel </b>are used as support structure for drawers, slide and racks for its easy closing and opening.</p>

          
           <a href="zinc-telescopic-channel-premium.html" data-ani-in="swinFadeInRight" data-ani-out="fadeOut" data-ani-delay="800" tabindex="0" class="swin-btn text-left text-white btn-transparent animated swinFadeInRight"><span>Explore more</span></a>
          </div>
        </div>
    <!-- </div> -->
    <div class="carousel-item">
      <img src="images/work-2.jpg" class="d-block w-100" alt="..." />
      <div class="carousel-caption d-none d-md-block">
        <h5>Second slide label</h5>
        <p>Some representative placeholder content for the second slide.</p>
      </div>
    </div>
    <div class="carousel-item">
      <img src="images/tschannels.png" class="d-block w-100" alt="..." />
      <div class="carousel-caption d-none d-md-block">
        <h5>Third slide label</h5>
        <p>Some representative placeholder content for the third slide.</p>
      </div>
    </div>
  </div>
  <button
    class="carousel-control-prev"
    type="button"
    data-bs-target="#carouselExampleCaptions"
    data-bs-slide="prev"
  >
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Previous</span>
  </button>
  <button
    class="carousel-control-next"
    type="button"
    data-bs-target="#carouselExampleCaptions"
    data-bs-slide="next"
  >
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Next</span>
  </button>
</div>
<!-- Add this script to handle the animation -->
<script>
  // Get all carousel items
  const carouselItems = document.querySelectorAll(".carousel-item");

  // Add an event listener to the carousel slide event
  document
    .getElementById("carouselExampleCaptions")
    .addEventListener("slide.bs.carousel", function (event) {
      // Remove the 'active' class from all carousel items
      carouselItems.forEach((item) => {
        item.querySelector(".text-bg").classList.remove("active");
      });

      // Add the 'active' class to the current active carousel item
      const activeItem = event.relatedTarget;
      activeItem.querySelector(".text-bg").classList.add("active");
    });
</script>

